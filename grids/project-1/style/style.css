body {
    margin: 0 auto;
    padding: 0;
    border: 0;
    background-color: white;
    width: 100%;
    height: 100svh;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
}

header {
    height: 100px;
    width: 100%;
    margin: 0;
    border: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 30px;
    font-weight: 600;
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
}

footer {
    height: 100px;
    width: 100%;
    margin: 0;
    border: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 30px;
    font-weight: 600;
}

.main {
    width: 100%;
    display: flex;
    justify-content: start;
    align-items: center;
    flex-direction: column;
    margin-top: 120px;
    gap: 100px 0px;
    flex-grow: 1;
}

.grid-container {
    display: grid;
    gap: 5px;
    user-select: none;
    /* можно поступить либо таким образом, задавая каждому элементу высоту, либо(строка 54) */
    /* grid-template-columns: repeat(4, 50px); 
    grid-template-rows: repeat(3, 50px); */

    /* создаем схему сетки */
    grid-template-areas:
    "A A B B"
    "A A B B"
    "C C C C";
}

.item {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: orange;
    color: whitesmoke;
    font-size: 30px;
    font-weight: 600;
    /* (от строки 36) использовать падинг */
    padding: 50px;
}
/* если оставить падинг, то все элементы будут одинаковы по высоте (в данном случае), но разные по длинне в соответствии с сеткой */
/* если оставить темплейты и репиты, но С будет ниже по высоте чем А и В так как в соответствии с сеткой А и В занимают больше места*/
.item-a {
    grid-area: A;
}

.item-b {
    grid-area: B;
}

.item-c {
    grid-area: C;
}


.grid-container-two {
    display: grid;
    user-select: none;
    height: 500px;
    grid-template-columns: 50px 100px 50px;
    grid-template-rows: 50px 100px 50px;
}